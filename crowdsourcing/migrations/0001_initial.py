# -*- coding: utf-8 -*-
# Generated by Django 1.9.9 on 2017-10-05 22:30
from __future__ import unicode_literals

import autoslug.fields
import crowdsourcing.util
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import sorl.thumbnail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_answer', models.TextField(blank=True, null=True)),
                ('date_answer', models.DateField(blank=True, null=True)),
                ('integer_answer', models.IntegerField(blank=True, null=True)),
                ('float_answer', models.FloatField(blank=True, null=True)),
                ('boolean_answer', models.NullBooleanField()),
                ('image_answer', sorl.thumbnail.fields.ImageField(blank=True, max_length=500, upload_to=b'crowdsourcing/images/%Y/%m/%d')),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('flickr_id', models.CharField(blank=True, max_length=64)),
                ('photo_hash', models.CharField(blank=True, editable=False, max_length=40, null=True)),
            ],
            options={
                'ordering': ('question',),
                'verbose_name': 'Resposta',
                'verbose_name_plural': 'Respostas',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fieldname', models.CharField(help_text=b'Um identificador de palavra \xc3\xbanica usada para rastrear esse valor; ele deve come\xc3\xa7ar com um letra e pode conter alfanum\xc3\xa9ricos e sublinhados (sem espa\xc3\xa7os).', max_length=55, verbose_name=b'Nome do campo')),
                ('question', models.TextField(help_text=b'Aparece na p\xc3\xa1gina de entrada da pesquisa.', verbose_name=b'Quest\xc3\xa3o')),
                ('question_html', models.TextField(blank=True, editable=False, null=True, verbose_name=b'Quest\xc3\xa3o HTML')),
                ('label', models.TextField(help_text=b'Aparece na p\xc3\xa1gina de resultados.', verbose_name=b'Legenda')),
                ('help_text', models.TextField(blank=True, verbose_name=b'Texto de ajuda')),
                ('required', models.BooleanField(default=False, help_text=b"Inseguro de mudar em enquetes ao vivo. Quest\xc3\xb5es do tipo 'lista de bot\xc3\xb5es de r\xc3\xa1dio' e 'listas suspensas' ter\xc3\xa3o uma op\xc3\xa7\xc3\xa3o em branco se n\xc3\xa3o forem necess\xc3\xa1rias.", verbose_name=b'Obrigat\xc3\xb3rio')),
                ('order', models.IntegerField(help_text=b'Em que ordem essa pergunta deve aparecer nos formul\xc3\xa1rios de enquete e nos permalinks ?', verbose_name=b'Ordem')),
                ('option_type', models.CharField(choices=crowdsourcing.util.ChoiceEnum([(b'date', b'Caixa de data'), (b'email', b'Caixa de email'), (b'bool', b'Caixa de marca\xc3\xa7\xc3\xa3o'), (b'char', b'Caixa de texto'), (b'video', b'Caixa de texto com link de v\xc3\xaddeo'), (b'location', b'Caixa de texto de localiza\xc3\xa7\xc3\xa3o'), (b'float', b'Caixa de texto decimal'), (b'integer', b'Caixa de texto inteiro'), (b'bool_list', b'Lista caixa de marca\xc3\xa7\xc3\xa3o'), (b'ranked', b'Lista classificada'), (b'choice', b'Lista de bot\xc3\xb5es de r\xc3\xa1dio'), (b'numeric_choice', b'Lista de bot\xc3\xb5es de r\xc3\xa1dio num\xc3\xa9ricos'), (b'numeric_select', b'Lista de lista suspensa num\xc3\xa9rica'), (b'select', b'Lista suspensa'), (b'photo', b'Upload de fotos'), (b'text', b'\xc3\x81rea de texto')]), help_text=b'Voc\xc3\xaa n\xc3\xa3o deve alterar esse campo em uma enqute ao vivo.', max_length=14, verbose_name=b'Tipo de op\xc3\xa7\xc3\xa3o')),
                ('numeric_is_int', models.BooleanField(default=True, editable=False, verbose_name=b'Num\xc3\xa9rico \xc3\xa9 um inteiro')),
                ('options', models.TextField(blank=True, default=b'', help_text=b'Use uma op\xc3\xa7\xc3\xa3o por linha. Em uma enquete ao vivo, voc\xc3\xaa pode modificar a ordem dessas op\xc3\xa7\xc3\xb5es. Voc\xc3\xaa pode, por sua conta e risco, adicionar novas op\xc3\xa7\xc3\xb5es, mas voc\xc3\xaa n\xc3\xa3o deve alterar ou remover op\xc3\xa7\xc3\xb5es.', verbose_name=b'Op\xc3\xa7\xc3\xb5es')),
                ('map_icons', models.TextField(blank=True, default=b'', help_text=b"Use one icon url per line. These should line up with the options. If the user's submission appears on a map, we'll use the corresponding icon on the map. This field only makes sense for Radio List and Select One Choice questions. Do not enter these map icons on a Location Field. For Google maps use 34px high by 20px wide .png images with a transparent background. You can safely modify this field on live surveys.")),
                ('answer_is_public', models.BooleanField(default=True, verbose_name=b'Reposta \xc3\xa9 p\xc3\xbablica')),
                ('use_as_filter', models.BooleanField(default=True, verbose_name=b'Use com filtro')),
            ],
            options={
                'ordering': ('order',),
                'verbose_name': 'Quest\xe3o',
                'verbose_name_plural': 'Quest\xf5es',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Se\xe7\xe3o',
                'verbose_name_plural': 'Se\xe7\xf5es',
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_pk', models.TextField(blank=True, null=True, verbose_name=b'id do objeto')),
                ('ip_address', models.GenericIPAddressField(verbose_name=b'Endere\xc3\xa7o IP')),
                ('submitted_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name=b'Submetido em')),
                ('session_key', models.CharField(blank=True, editable=False, max_length=40)),
                ('featured', models.BooleanField(default=False, verbose_name=b'Destaque')),
                ('is_public', models.BooleanField(default=True, help_text=b"Somente exibe submiss\xc3\xb5es p\xc3\xbablicas. A caixa de sele\xc3\xa7\xc3\xa3o 'Envio moderado' da enquete determina o valor padr\xc3\xa3o desse campo.", verbose_name=b'\xc3\x89 p\xc3\xbablico')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='content_type_set_for_submission', to='contenttypes.ContentType', verbose_name=b'tipo de conte\xc3\xbado')),
            ],
            options={
                'ordering': ('-submitted_at',),
                'verbose_name': 'Submiss\xe3o',
                'verbose_name_plural': 'Submiss\xf5es',
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=80, verbose_name=b'T\xc3\xadtulo')),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from=b'title', unique=True, verbose_name=b'Slug')),
                ('tease', models.TextField(blank=True, help_text=b'Mensagem de insentivo ao usu\xc3\xa1rio.', verbose_name=b'Provoca\xc3\xa7\xc3\xa3o')),
                ('description', models.TextField(blank=True, verbose_name=b'Descri\xc3\xa7\xc3\xa3o')),
                ('thanks', models.TextField(blank=True, help_text=b'Quando um usu\xc3\xa1rio enviar uma submiss\xc3\xa3o, exiba esta mensagem.', verbose_name=b'Agradecimento')),
                ('require_login', models.BooleanField(default=False, verbose_name=b'Requer autentica\xc3\xa7\xc3\xa3o')),
                ('allow_multiple_submissions', models.BooleanField(default=False, verbose_name=b'Permitir multiplas submiss\xc3\xb5es')),
                ('moderate_submissions', models.BooleanField(default=False, help_text=b'Se marcada, todas as submiss\xc3\xb5es come\xc3\xa7am como N\xc3\x83O p\xc3\xbablicas e voc\xc3\xaa ter\xc3\xa1 que manualmente torn\xc3\xa1-las p\xc3\xbablicas. Se o sua enquete n\xc3\xa3o mostrar quaisquer resultados, pode ser porque esta op\xc3\xa7\xc3\xa3o est\xc3\xa1 marcada.', verbose_name=b'Moderar submiss\xc3\xb5es')),
                ('allow_comments', models.BooleanField(default=False, help_text=b'Permitir coment\xc3\xa1rios sobre submiss\xc3\xb5es de usu\xc3\xa1rios.', verbose_name=b'Permitir coment\xc3\xa1rios')),
                ('allow_voting', models.BooleanField(default=False, help_text=b'Os usu\xc3\xa1rios podem votar nas submiss\xc3\xb5es', verbose_name=b'Permitir voto')),
                ('archive_policy', models.IntegerField(choices=crowdsourcing.util.ChoiceEnum([(1, b'immediate'), (2, b'post-close'), (3, b'never')]), default=1, help_text=b'Como tornar os resultados p\xc3\xbablico ? immediate: Todos os resultados ser\xc3\xa3o imediatamente p\xc3\xbablico. post-close: Os resultados ser\xc3\xa3o p\xc3\xbablico ap\xc3\xb3s a op\xc3\xa7\xc3\xa3o "termina em" mostrado abaixo. never: Os resultados nunca ser\xc3\xa3o p\xc3\xbablico.', verbose_name=b'Pol\xc3\xadtica de arquivamento')),
                ('starts_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name=b'Inicia em')),
                ('survey_date', models.DateField(blank=True, editable=False, null=True, verbose_name=b'Data da enquete')),
                ('ends_at', models.DateTimeField(blank=True, null=True, verbose_name=b'Termina em')),
                ('has_script', models.BooleanField(default=False, help_text=b'Se ativado, o modelo renderizar\xc3\xa1 a tag do script para STATIC_URL/surveys/slug-name.js', verbose_name=b'Tem script')),
                ('is_published', models.BooleanField(default=False, verbose_name=b'Est\xc3\xa1 publicado')),
                ('email', models.CharField(blank=True, help_text=b'Enviar uma notifica\xc3\xa7\xc3\xa3o para esses endere\xc3\xa7os de e-mail sempre que algu\xc3\xa9m enviar uma entrada para esta enquete. Separar por v\xc3\xadgula.', max_length=255, verbose_name=b'Email')),
                ('flickr_group_id', models.CharField(blank=True, editable=False, max_length=60, verbose_name=b'ID do grupo Flickr')),
                ('flickr_group_name', models.CharField(blank=True, max_length=255, verbose_name=b'Nome do grupo Flickr')),
            ],
            options={
                'ordering': ('-starts_at',),
                'verbose_name': 'Enquete',
                'verbose_name_plural': 'Enquetes',
            },
        ),
        migrations.CreateModel(
            name='SurveyReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text=b'Voc\xc3\xaa pode deixar este campo em branco. Crowdsourcing usar\xc3\xa1 o t\xc3\xadtulo da pesquisa como um padr\xc3\xa3o.', max_length=100, verbose_name=b'T\xc3\xadtulo')),
                ('slug', models.CharField(help_text=b'O padr\xc3\xa3o \xc3\xa9 a descri\xc3\xa7\xc3\xa3o da enquete.', max_length=50, verbose_name=b'Slug')),
                ('summary', models.TextField(blank=True, verbose_name=b'Resumo')),
                ('sort_by_rating', models.BooleanField(default=False, help_text=b'Por padr\xc3\xa3o, ordena decrescente pela classifica\xc3\xa7\xc3\xa3o mais alta. Caso contr\xc3\xa1rio, a orden\xc3\xa7\xc3\xa3o padr\xc3\xa3o \xc3\xa9 por data decrescente.', verbose_name=b'Ordenar por classifica\xc3\xa7\xc3\xa3o')),
                ('display_the_filters', models.BooleanField(default=True, help_text=b'Exibir os filtros na parte superior da p\xc3\xa1gina do relat\xc3\xb3rio.', verbose_name=b'Exibir os filtros')),
                ('limit_results_to', models.PositiveIntegerField(blank=True, help_text=b'Utilize apenas as submiss\xc3\xb5es X superiores.', null=True, verbose_name=b'Limite resultados para')),
                ('featured', models.BooleanField(default=False, help_text=b'Inclua apenas submiss\xc3\xb5es em destaque.', verbose_name=b'Destaque')),
                ('display_individual_results', models.BooleanField(default=True, help_text=b"Exibir resultados individuais separados se este campo for 'verdadeiro' e voc\xc3\xaa tiver perguntas arquiv\xc3\xa1veis, como aquelas com respostas de par\xc3\xa1grafo.", verbose_name=b'Exiba resultados individuais')),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crowdsourcing.Survey', verbose_name=b'Enquete')),
            ],
            options={
                'ordering': ('title',),
                'verbose_name': 'Relat\xf3rio',
                'verbose_name_plural': 'Relat\xf3rios',
            },
        ),
        migrations.CreateModel(
            name='SurveyReportDisplay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_type', models.PositiveIntegerField(choices=crowdsourcing.util.ChoiceEnum([(1, b'text'), (2, b'pie'), (3, b'map'), (4, b'bar'), (5, b'line'), (6, b'slideshow'), (7, b'download')]), verbose_name=b'Tipo de exibi\xc3\xa7\xc3\xa3o')),
                ('aggregate_type', models.PositiveIntegerField(choices=crowdsourcing.util.ChoiceEnum([(1, b'default'), (2, b'sum'), (3, b'count'), (4, b'average')]), default=1, help_text=b"N\xc3\xb3s s\xc3\xb3 usamos esse campo se voc\xc3\xaa escolher um gr\xc3\xa1fico de barra ou linha. Como devemos agrega o eixo y ? 'average' \xc3\xa9 bom para coisas como avalia\xc3\xa7\xc3\xb5es, 'sum' \xc3\xa9 bom para os totais, e 'count' \xc3\xa9 bom para mostrar quantidade.", verbose_name=b'Tipo de agregador')),
                ('fieldnames', models.TextField(blank=True, help_text=b'Puxe esses valores de Pesquisa -> Perguntas -> Nome de campo. Separar por espa\xc3\xa7os.Estes s\xc3\xa3o os eixos-y de barras e gr\xc3\xa1ficos de linhas.', verbose_name=b'Nome do campos')),
                ('x_axis_fieldname', models.CharField(blank=True, help_text=b'Isso se aplica apenas a gr\xc3\xa1ficos de barras e linhas. Use apenas 1 campo.', max_length=80, verbose_name=b'Nome do campo do exio X')),
                ('annotation', models.TextField(blank=True, verbose_name=b'Anota\xc3\xa7\xc3\xa3o')),
                ('limit_map_answers', models.IntegerField(blank=True, help_text=b'O Google Maps fica muito lento se voc\xc3\xaa adicionar muitos pontos. Use este campo para limitar o n\xc3\xbamero de pontos que aparecem no mapa.', null=True, verbose_name=b'Limitar resposta ao mapa')),
                ('map_center_latitude', models.FloatField(blank=True, help_text=b'Se voc\xc3\xaa n\xc3\xa3o especificar latitude, longitude ou zoom, o mapa apenas no centro e zoom para que o mapa mostre todos os pontos.', null=True, verbose_name=b'Latitude central do mapa')),
                ('map_center_longitude', models.FloatField(blank=True, null=True)),
                ('map_zoom', models.IntegerField(blank=True, help_text=b'13 \xc3\xa9 sobre o n\xc3\xadvel certo de Manhattan. 0 mostra o mundo inteiro.', null=True, verbose_name=b'Zoom do mapa')),
                ('caption_fields', models.CharField(blank=True, help_text=b'As respostas a essas perguntas aparecer\xc3\xa3o como legendas abaixo de seus slides correspondentes. Separar por espa\xc3\xa7os.', max_length=200, verbose_name=b'Campos de legenda')),
                ('order', models.IntegerField(verbose_name=b'Ordem')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crowdsourcing.SurveyReport', verbose_name=b'Relat\xc3\xb3rio')),
            ],
            options={
                'ordering': ('order',),
                'verbose_name': 'Exibi\xe7\xe3o de relat\xf3rios',
                'verbose_name_plural': 'Exibi\xe7\xe3o de relat\xf3rios',
            },
        ),
        migrations.AddField(
            model_name='survey',
            name='default_report',
            field=models.ForeignKey(blank=True, help_text=b'Sempre geramos automaticamente um link para os resultados desta enquete n\xc3\xb3s usaremos esse relat\xc3\xb3rio. Se ele for deixado em branco, usaremos o comportamento do relat\xc3\xb3rio padr\xc3\xa3o.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='crowdsourcing.SurveyReport'),
        ),
        migrations.AddField(
            model_name='survey',
            name='sections',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='crowdsourcing.Section'),
        ),
        migrations.AddField(
            model_name='survey',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sites.Site'),
        ),
        migrations.AddField(
            model_name='submission',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crowdsourcing.Survey', verbose_name=b'Enquete'),
        ),
        migrations.AddField(
            model_name='submission',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name=b'Usu\xc3\xa1rio'),
        ),
        migrations.AddField(
            model_name='section',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='survey', to='crowdsourcing.Survey'),
        ),
        migrations.AddField(
            model_name='question',
            name='section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='question_section', to='crowdsourcing.Section', verbose_name='Se\xe7\xe3o'),
        ),
        migrations.AddField(
            model_name='question',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='crowdsourcing.Survey'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crowdsourcing.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='submission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crowdsourcing.Submission'),
        ),
        migrations.AlterUniqueTogether(
            name='surveyreport',
            unique_together=set([('survey', 'slug')]),
        ),
        migrations.AlterUniqueTogether(
            name='survey',
            unique_together=set([('survey_date', 'slug')]),
        ),
        migrations.AlterUniqueTogether(
            name='question',
            unique_together=set([('fieldname', 'survey')]),
        ),
    ]
